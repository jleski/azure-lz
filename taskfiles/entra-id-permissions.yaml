version: 3

vars:
  PREFIX: "[{{ .TASKFILE | base | replace \".yaml\" \"\" | upper }}]"

tasks:
  assign-group-permissions:
    desc: "{{ .PREFIX }} Assign permissions to Entra ID groups for each management group"
    deps: [create-entra-id-groups]
    cmds:
      - |
        for mg in $(az account management-group list --query "[?starts_with(name, '{{.MG_PREFIX}}')].{name:name,displayName:displayName}" -o tsv); do
          name=$(echo $mg | cut -f1)
          displayName=$(echo $mg | cut -f2)
          group_id=$(az ad group show --group "MG - $displayName Admins" --query id -o tsv)
          az role assignment create --assignee $group_id --role "Owner" --scope "/providers/Microsoft.Management/managementGroups/$name"
        done

  assign-group-permissions-v2:
    desc: "{{ .PREFIX }} Assign permissions to Entra ID groups for each management group"
    cmds:
      - |
        truncate_and_hash() {
          local full_name="$1"
          local max_length=30
          local truncated="${full_name:0:$max_length}"
          local hash=$(echo -n "$full_name" | md5sum | cut -c1-8)
          echo "${truncated}-${hash}"
        }
        roles=("Owner" "Reader" "Contributor" "User Access Administrator")
        for mg in $(az account management-group list --query "[?starts_with(name, '{{.MG_PREFIX}}')].{name:name,displayName:displayName}" -o tsv); do
          name=$(echo $mg | cut -f1)
          if [[ $name == {{.MG_PREFIX}}* ]]; then
            displayName=$(echo $mg | cut -f2)
            for role in "${roles[@]}"; do
              group_name="MG - $displayName $role"
              group_id=$(az ad group show --group "$group_name" --query id -o tsv)
              echo "Group name: $group_name, ID: $group_id"
              if ! test -z "${group_id}"; then
                az role assignment create --assignee $group_id --role "$role" --scope "/providers/Microsoft.Management/managementGroups/$name"
                echo "Role assignment created: $role for $group_name in Management Group $name"
              else
                echo "Group $group_name doesn't exists. Skipping role assignment."
              fi
            done
          fi
        done